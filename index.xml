<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simba</title>
    <link>https://HHUsimba.github.io/</link>
    <description>Recent content on Simba</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 09 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://HHUsimba.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python安装tips</title>
      <link>https://HHUsimba.github.io/posts/python%E5%AE%89%E8%A3%85tips/</link>
      <pubDate>Wed, 20 Feb 2019 00:04:23 +0800</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/python%E5%AE%89%E8%A3%85tips/</guid>
      <description>1. 包的安装   windows下使用pip安装快速方法：
#some-package为你想要安装的包的名字
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package #安装指定的版本的包 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package==版本号    在cmd下复制粘贴方法：
step1:进入cmd后右键窗口→属性→编辑选项→快速编辑模式√
step2:复制选中代码，右键cmd命令行处，回车
  2.机器学习常用包 按照以下顺序安装：
1、numpy、scipy
2、pandas
3、matplotlib
4、scikit-learn工具包
5、Theano深度学习</description>
    </item>
    
    <item>
      <title>The &#34;figure&#34; Shortcode</title>
      <link>https://HHUsimba.github.io/posts/the-figure-shortcode/</link>
      <pubDate>Mon, 24 Dec 2018 12:29:41 +0800</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/the-figure-shortcode/</guid>
      <description>Hugo has figure shortcode built in, so you can easily add figcaptions or hyperlink rel attributes to images. Documentations can be found here:
https://gohugo.io/content-management/shortcodes/#figure
This theme has 3 CSS classes made for figure elements:
 big: images will break the width limit of main content area. left: images will float to the left. right: images will float to the right.  If a figure has no class set, the image will behave just like a normal markdown image: !</description>
    </item>
    
    <item>
      <title>Post With Featured Image</title>
      <link>https://HHUsimba.github.io/posts/post-with-featured-image/</link>
      <pubDate>Mon, 01 Oct 2018 16:15:09 +0800</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/post-with-featured-image/</guid>
      <description>Just define the image URL in the content’s front matter, the featured image will be displayed as the background.
For example:
---images:- https://picsum.photos/1024/768/?random---This is an array, you can set multiple urls, only the first url will be used. These images is also used in Twitter Cards and the Open Graph metadata.</description>
    </item>
    
    <item>
      <title>Typography</title>
      <link>https://HHUsimba.github.io/posts/typography/</link>
      <pubDate>Sat, 29 Sep 2018 11:36:33 +0800</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/typography/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
 An apple is a sweet, edible fruit produced by an apple tree (Malus pumila).</description>
    </item>
    
    <item>
      <title>Python安装tips</title>
      <link>https://HHUsimba.github.io/posts/latex%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 03 Sep 2018 08:46:13 +0800</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/latex%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</guid>
      <description>导包: 在LaTex中有专门的导包的地方：   修改表格线条粗细\hline step1：用 \usepackage{booktabs} 导包 step2: 首行: \toprule[1pt] 中间行：\midrule[1pt] 尾行：\midrule[1pt]
  表格内容对齐： \begin{tabular}{c} c:center r:right l:left
  Latex添加新一页 用“\clearpage” 不要用“\newpage”
  调整表格列间距 \begin{tabular}{|p{1cm}|p{2cm}|p{3cm}|}
  图表位置移动 \begin{table}[!htb] 首先，!表示无视美学规则，按下面的要求放置； 然后h t b p分别代表4中放置方式，优先级依次递减。 可以自己定优先级，tbhp等
常用选项[htbp]是浮动格式： h=here 放置在代码中这个图片出现的位置，也就是你想让它出现的位置； t = top 放在该页顶端； b = bottom 放在该页底部； p = page浮动页。将图形放置在一只允许有浮动对象的页面上。
一般使用[htb]这样的组合，只用[h]是没有用的。这样组合的意思就是latex会尽量满足排在前面的浮动格	式，就是h-t-b这个顺序，让排版的效果尽量好。 !h 只是试图放在当前位置。如果页面剩下的部分放不下，还是会跑到下一页的。一般页言，用 [!h] 选项经常会出现不能正确放置的问题，所以常用 [ht]、[htbp] 等。
  增大表格行距 \begin{document} \renewcommand\arraystretch{2} //作用是讲每一行的高度变为原来的两倍。 \begin{table}[h] \centering</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://HHUsimba.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>https://HHUsimba.github.io/about-hugo/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://HHUsimba.github.io/about-hugo/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://HHUsimba.github.io/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://HHUsimba.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://HHUsimba.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://HHUsimba.github.io/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>